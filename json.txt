//void SettingsWindow::JsonWriteToFile()
//{
//  Json::Value settings;
//  //auto & settings = m_mainWindow->m_settings;
//  //settings.clear();
//  Json::Value difficulties(Json::arrayValue);
//  difficulties.append(Json::Value("Easy"));
//  difficulties.append(Json::Value("Medium"));
//  difficulties.append(Json::Value("Hard"));
//  auto & root = settings["settings"];
//  root["difficulties"] = difficulties;
//  root["difficultyIndex"] = m_comboBoxDifficulty->currentIndex();
//  root["gameSpeed"] = m_spinBoxSpeed->value();

//  std::ofstream settingsFile;
//  settingsFile.open("settings.json"/*JSONFILENAME*/);
//  if (settingsFile.is_open())
//  {
//    Json::StyledWriter styledWriter;
//    settingsFile << styledWriter.write(settings);
//    settingsFile.close();
//  }
//}

//void SettingsWindow::JsonReadFromFile()
//{
//  Json::Value settings;
//  //auto & settings = m_mainWindow->m_settings;
//  //settings.clear();
//  std::ifstream settingsFile("settings.json"/*JSONFILENAME*/);
//  if (settingsFile.is_open())
//  {
//    settingsFile >> settings;
//    settingsFile.close();
//  }

//  Json::Value & difficulties = settings["settings"]["difficulties"];
//  if (difficulties.isArray())
//  {
//    for (Json::Value::ArrayIndex i = 0; i < difficulties.size(); i++)
//    {
//     // m_comboBoxDifficulty->addItem(QString((difficulties[i].asString()).c_str()));
//    }
//  }
//  m_comboBoxDifficulty->setCurrentIndex(settings["settings"]["difficultyIndex"].asInt());
//  m_spinBoxSpeed->setValue(settings["settings"]["gameSpeed"].asInt());
//}